import logging
import os
from aiogram import Bot, Dispatcher, types, executor
from dotenv import load_dotenv

# Load .env
load_dotenv()
API_TOKEN = os.getenv("BOT_TOKEN")

# Initialize bot
bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)
logging.basicConfig(level=logging.INFO)

# List of employees (for demo)
employees = []

# Handle /start
@dp.message_handler(commands=['start'])
async def send_welcome(message: types.Message):
    await message.reply("ЁЯСЛ рж╕рзНржмрж╛ржЧрждржо! ржЖржкржирж┐ ржпржжрж┐ ржПржоржкрзНрж▓рзЯрж┐ рж╣ржи, /get_task ржЯрж╛ржЗржк ржХрж░рзБржиред")

# Admin adds employee
@dp.message_handler(commands=['add_employee'])
async def add_employee(message: types.Message):
    if message.from_user.id != 123456789:  # <-- ржЖржкржирж╛рж░ Telegram ID ржмрж╕рж╛ржи
        return await message.reply("тЭМ ржЖржкржирж┐ ржЕрзНржпрж╛ржбржорж┐ржи ржирж╛!")

    try:
        username = message.text.split()[1]
        if username not in employees:
            employees.append(username)
            await message.reply(f"тЬЕ ржПржоржкрзНрж▓ржпрж╝рж┐ @{username} ржпрзБржХрзНржд рж╣ржпрж╝рзЗржЫрзЗ!")
        else:
            await message.reply("тЪая╕П ржПржЗ ржЗржЙржЬрж╛рж░ ржЗрждрж┐ржоржзрзНржпрзЗ ржПржоржкрзНрж▓ржпрж╝рж┐ред")
    except:
        await message.reply("тЪая╕П ржХржорж╛ржирзНржб ржнрзБрж▓ред ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзБржи: /add_employee @username")

# Employee gets a task
@dp.message_handler(commands=['get_task'])
async def get_task(message: types.Message):
    if message.from_user.username not in employees:
        return await message.reply("тЭМ ржЖржкржирж┐ ржПржоржкрзНрж▓рзЯрж┐ рждрж╛рж▓рж┐ржХрж╛рзЯ ржирзЗржЗ!")
    
    # Demo task link
    task_link = "https://example.com/movie123?ref=" + message.from_user.username
    await message.reply(f"ЁЯОп ржЖржЬржХрзЗрж░ ржЯрж╛рж╕рзНржХ:\n\nрж╢рзЗржпрж╝рж╛рж░ ржХрж░рзБржи ржПржЗ рж▓рж┐ржВржХржЯрж┐:\n{task_link}")

if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
